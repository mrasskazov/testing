# vi:syntax=sh 
init_repo() {
    local repo="${1:-$PWD/tmp-repo}"
    if [ ! -d $repo ]; then
        git init --bare "$repo"
    fi
    export GIT_DIR="$repo"
}

ALL_PROJECTS=" cinder  glance  horizon  keystone  nova  quantum  swift  tempest  oslo "
ALL_CLIENT_PROJECTS="cinder glance keystone nova quantum swift"
PROJECTS=""

_clean_but() {
    if [ "$1" == 'but' ]; then
        shift
        for prj; do
            PROJECTS=${PROJECTS/ $prj /}
        done
    fi
}

add_all_projects() {
    PROJECTS="$PROJECTS $ALL_PROJECTS"
    local prj
    for prj in $ALL_CLIENT_PROJECTS; do
        PROJECTS="$PROJECTS python-${prj}client "
    done
    _clean_but $@
}

add_client_projects() {
    local prj
    for prj in $ALL_CLIENT_PROJECTS; do
        PROJECTS="$PROJECTS python-${prj}client "
    done
    _clean_but $@
}

add_nonclient_projects() {
    PROJECTS="$PROJECTS $ALL_PROJECTS"
    _clean_but $@
}

REMOTE_CLEANUP=""

add_remote() {
    local name=$1
    local url=$2
    if git remote | grep "$name" > /dev/null; then
        git remote set-url "$name" "$url"
    else
        git remote add "$name" "$url"
    fi
}

cleanup_remotes() {
    for name in $REMOTE_CLEANUP; do
    if git remote | grep "$name" > /dev/null; then
        git remote rm "$name"
    fi
    done
}

add_mirantis_remote() {
    local prj=${1:-$prj}
    if [ -z "$prj" ]; then
        echo "$$prj or positional arg expected" >&2
    fi
    add_remote mirantis-$prj ssh://${USERNAME:+$USERNAME@}gerrit.mirantis.com:29418/openstack/$prj.git
}

add_github_remote() {
    local prj=${1:-$prj}
    if [ -z "$prj" ]; then
        echo "$$prj or positional arg expected" >&2
    fi
    add_remote github-$prj git://github.com/openstack/${prj}.git
}

cleanup_tags() {
    find ${GIT_DIR:-.git}/refs/tags -mindepth 1 -delete
}

cleanup_all() {
    cleanup_tags
    cleanup_remotes
}

set_gitreview() {
    local branch=$1
    local prj=${2:-$prj}
    cat > .gitreview <<END
[gerrit]
host=gerrit.mirantis.com
project=openstack/${prj}.git
defaultremote=gerrit-mirantis
defaultbranch=$branch
END
}
