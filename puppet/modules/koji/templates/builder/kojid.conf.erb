[kojid]
; The number of seconds to sleep between tasks
; sleeptime=15

; The maximum number of jobs that kojid will handle at a time
; maxjobs=10

; The minimum amount of free space (in MBs) required for each build root
; minspace=8192

; The directory root where work data can be found from the koji hub
; topdir=/mnt/koji

; The directory root for temporary storage
; workdir=/tmp/koji

; The directory root for mock
; mockdir=/var/lib/mock

; The user to run as when doing builds
; mockuser=kojibuilder

; The vendor to use in rpm headers
; vendor=Koji

; The packager to use in rpm headers
; packager=Koji

; The distribution to use in rpm headers
; distribution=Koji

; The _host string to use in mock
; mockhost=koji-linux-gnu

; The URL for the xmlrpc server
server=http://127.0.0.1/kojihub

; The URL for file access
topurl=http://127.0.0.1/kojifiles

; A space-separated list of hostname:repository[:use_common] tuples that kojid
; is authorized to checkout from (no quotes).
; Wildcards (as supported by fnmatch) are allowed.
; If use_common is specified and is one of "false", "no", "off", or "0"
; (without quotes), then kojid will not attempt to checkout ; a common/ dir
; when checking out sources from the source control system.  Otherwise, it will
; attempt to checkout a common/ ; dir, and will raise an exception if it cannot.
;allowed_scms=cvs.rpmfusion.org:/cvs/free:rpms
allowed_scms=<%= allowed_scms %>

; The mail host to use for sending email notifications
smtphost=localhost

; The From address used when sending email notifications
from_addr=Koji Build System <buildsys@<%= scope.lookupvar('::domain') %>>

<% if auth == "kerberos" %>
;configuration for Kerberos authentication

; the username has to be the same as what you used with add-host
; Note from the Fedora wiki: Kojid will not attempt kerberos authentication to the koji-hub unless the username field is commented out (?)
;user =

host_principal_format=compile/%s@<%= realm %>
<% end %>

<% if auth == "ssl" %>
;configuration for SSL authentication
user = <%= hub %>
;client certificate
cert = /etc/kojid/client.crt
;certificate of the CA that issued the client certificate
ca = /etc/kojid/clientca.crt
<% end %>

;certificate of the CA that issued the HTTP server certificate
serverca = /etc/kojid/serverca.crt
